import pandas as pd
import pathlib

# Try importing CTGAN
try:
    from ctgan import CTGAN
except ImportError:
    from sdv.tabular import CTGAN


def generate_synthetic_data(
    train_path="data/processed/train.csv",
    output_path="data/processed/synthetic_minority.csv",
    epochs=50,
    sample_frac=0.3
):
    """
    Generate synthetic data using CTGAN and save to output_path.

    Args:
        train_path (str): Path to training dataset.
        output_path (str): Path to save synthetic dataset.
        epochs (int): Training epochs for CTGAN.
        sample_frac (float): Fraction of synthetic samples relative to original dataset size.

    Returns:
        pd.DataFrame: Synthetic data generated by CTGAN.
    """
    p = pathlib.Path(train_path).parent

    # Load training data
    print(f"[INFO] Loading training data from {train_path}")
    df = pd.read_csv(train_path)
    print("[INFO] Original shape:", df.shape)

    # Identify discrete (categorical) columns
    discrete_columns = df.select_dtypes(include=["object"]).columns.tolist()
    print("[INFO] Detected discrete columns:", discrete_columns)

    # Train CTGAN
    ctgan = CTGAN(epochs=epochs)
    ctgan.fit(df, discrete_columns=discrete_columns)

    # Generate synthetic samples
    n_samples = int(sample_frac * len(df))
    synthetic_data = ctgan.sample(n_samples)
    print("[INFO] Synthetic shape:", synthetic_data.shape)

    # Save synthetic data
    synthetic_data.to_csv(output_path, index=False)
    print(f"[INFO] Synthetic data saved to {output_path}")

    return synthetic_data


# Allow running directly from terminal
if __name__ == "__main__":
    generate_synthetic_data()
